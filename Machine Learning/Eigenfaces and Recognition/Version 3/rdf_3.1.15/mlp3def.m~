function [W1, B1, W2, B2, W3, B3, InputNbr, H1cellNbr, H2cellNbr, OutputNbr] = mlp3def (InputNbr, H1cellNbr, H2cellNbr, OutputNbr, seed)

% usage: [W1, B1, W2, B2, W3, B3 [, InputNbr, H1cellNbr, H2cellNbr, OutputNbr]] 
%               = mlp3def ([InputNbr, H1cellNbr, H2cellNbr, OutputNbr] [, seed])
%
% Définition de la structure d'un réseau MLP 3 couches (2 couches cachées).
%
% MLP3DEF permet de définir la structure d'un réseau de neurones
% MLP à trois couches cachées (Multi Layer Perceptron) en fonction des
% paramètres souhaités : nombre d''entrées, de cellules cachées et
% nombre de sorties.
% Les poids sont générés avec des valeurs aléatoires.
%
%
% ARGUMENTS : [requis mais optionnels]
%
% InputNbr 	= nombre d'entrées
% H1cellNbr  = nombre de cellules sur la premiere couche cachée
% H2cellNbr  = nombre de cellules sur la deuxième couche cachée
% OutputNbr = nombre de sorties
%
% ARGUMENTS : [optionnels]
% seed      = valeur d'initialisation du générateur aléatoire
%
% VALEURS DE RETOUR :
%
% W1      	: matrice des poids première couche
% B1      	: vecteur des seuils première couche
% W2      	: matrice des poids deuxième couche
% B2      	: vecteur des seuils deuxième couche
% W3      	: matrice des poids troisième couche
% B3      	: vecteur des seuils troisième couche
%
% VALEURS DE RETOUR [optionnelles] :
%
% InputNbr 	= nombre d'entrées
% H1cellNbr  = nombre de cellules sur la première couche cachée
% H2cellNbr  = nombre de cellules sur la deuxième couche cachée
% OutputNbr = nombre de sorties
%
% DESCRIPTION :
%
%
% Lorsqu'aucun argument n'est spécifié ou que seul l'argument 'seed' l'est,
% l'utilisateur est sollicité par la fonction pour donner les arguments
% optionnels mais requis.
% Les matrices de poids sont initialisées aléatoirement. Si l'argument 'seed'
% est donné, le générateur aléatoire est réinitialisé à cette valeur, sinon
% il n'est réinitialisé.
% MLP3DEF utilise la fonction RANDWEIGHTS pour générer les poids.
%
% VOIR AUSSI :
%
% RANDWEIGHTS MLP3ATRAIN  MLP3RUN
%


% MLP3DEF
% Bruno Gas - ISIR UPMC <Bruno.Gas@upmc.fr>
% Création : décembre 2012
% Version : 1.0
% Dernieres révisions : 
%


% controle des arguments :

if nargin==3 || nargin >5
   error('[MLP3DEF] Usage : [W1, B1, W2, B2, W3, B3] = mlp2def ([InputNbr, H1cellNbr, H2cellNbr, OutputNbr] [, seed]);');   
end;

if nargin==1, seed = InputNbr;
elseif nargin==0 || nargin==4, seed = -1; end;

if nargin==0 || nargin==1
   disp('Architecture du réseau MLP 3 couches : ');
   InputNbr  = input('Nombre d''entrées du réseau = ');
   H1cellNbr  = input('Nombre de cellules cachées = ');
   H2cellNbr  = input('Nombre de cellules cachées = ');
   OutputNbr = input('Nombre de sorties = ');
end;

if seed==-1	
	[W1,B1] = randweights(HcellNbr,InputNbr);
	[W2,B2] = randweights(OutputNbr,HcellNbr);	
else
   [W1,B1] = randweights(HcellNbr,InputNbr,seed);
	[W2,B2] = randweights(OutputNbr,HcellNbr);	   
end;
	
disp(['Classifieur MLP 2 couches généré : [' num2str(InputNbr) ' x ' num2str(HcellNbr) ' x ' num2str(OutputNbr) ']']);	

